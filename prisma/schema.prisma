generator client {
  provider = "prisma-client-js"
  previewFeatures = ["nativeTypes"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int        @id @default(autoincrement())
  userId    String     @unique
  name      String     @default("")
  tag       String     @unique
  mediaId   Int?     
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  notebooks Notebook[]
  media     Media?     @relation(fields: [mediaId], references: [id])
}

model Notebook {
  id         Int        @id @default(autoincrement())
  customerId Int
  tag        String
  mediaId    Int?
  text       String?    @db.Text
  price      Float?
  name       String
  createdAt  DateTime?  @default(now())
  updatedAt  DateTime?  @updatedAt
  customer   Customer   @relation(fields: [customerId], references: [id])
  media      Media?     @relation(fields: [mediaId], references: [id])
  questions  Question[]
  topics     Topic[]

  @@unique([customerId, tag])
}

model Topic {
  id         Int        @id @default(autoincrement())
  notebookId Int
  name       String
  createdAt  DateTime?  @default(now())
  updatedAt  DateTime?  @updatedAt
  notebook   Notebook   @relation(fields: [notebookId], references: [id])
  subtopics  SubTopic[]
}

model SubTopic {
  id        Int        @id @default(autoincrement())
  topicId   Int
  name      String
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  topic     Topic      @relation(fields: [topicId], references: [id])
  questions Question[]
}

model Question {
  id               Int               @id @default(autoincrement())
  tag              String
  text             String            @db.Text
  notebookId       Int
  solution         String?           @db.Text
  name             String?
  subTopicId       Int?
  createdAt        DateTime?         @default(now())
  updatedAt        DateTime?         @updatedAt
  notebook         Notebook          @relation(fields: [notebookId], references: [id])
  subTopic         SubTopic?         @relation(fields: [subTopicId], references: [id])
  alternatives     Alternative[]
  rightAlternative RightAlternative?

  @@unique([notebookId, tag])
}

model Alternative {
  id               Int               @id @default(autoincrement())
  text             String            @db.Text
  questionId       Int
  createdAt        DateTime?         @default(now())
  updatedAt        DateTime?         @updatedAt
  question         Question          @relation(fields: [questionId], references: [id])
  RightAlternative RightAlternative?
}

model RightAlternative {
  id            Int         @id @default(autoincrement())
  alternativeId Int         @unique
  questionId    Int         @unique
  createdAt     DateTime?   @default(now())
  updatedAt     DateTime?   @updatedAt
  alternative   Alternative @relation(fields: [alternativeId], references: [id])
  question      Question    @relation(fields: [questionId], references: [id])
}

model Media {
  id         Int       @id @default(autoincrement())
  customerId Int
  tag        String
  name       String
  ext        String
  mime       String
  size       Float
  createdAt  DateTime? @default(now())
  updatedAt  DateTime? @updatedAt
  text       String?
  caption    String?
  width      Int?
  height     Int?

  @@unique([customerId, tag])
}
